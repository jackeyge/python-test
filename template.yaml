apiVersion: v1

kind: Template

labels:

  template: python-test

#模板名称

metadata:

  name: python-test
objects:

- apiVersion: v1

  kind: ImageStream

  metadata:

    labels:

      application: ${APPLICATION_NAME}

    name: ${APPLICATION_NAME}

#创建的应用image stream名称

- apiVersion: v1

  kind: Service

  metadata:

    annotations:

      description: The web server's http port.

    labels:

      application: ${APPLICATION_NAME}

    name: ${APPLICATION_NAME}

  spec:

    ports:

    - port: 8000

      targetPort: 8000

    selector:

      deploymentConfig: ${APPLICATION_NAME}

- apiVersion: v1

  id: ${APPLICATION_NAME}-http

  kind: Route

  metadata:

    annotations:

      description: Route for application's http service.

    labels:

      application: ${APPLICATION_NAME}

    name: ${APPLICATION_NAME}

  spec:

    to:

      name: ${APPLICATION_NAME}

- apiVersion: v1

  kind: BuildConfig

  metadata:

    labels:

      application: ${APPLICATION_NAME}

    name: ${APPLICATION_NAME}

  spec:

    output:

      to:

        kind: ImageStreamTag

        name: ${APPLICATION_NAME}:latest

#将build成功的镜像打成latest的image stream tag。

    source:

      git:

        ref: ${SOURCE_REF}

        uri: ${SOURCE_URL}

      type: Git

    strategy:

      sourceStrategy:

        forcePull: true

        from:

          kind: ImageStreamTag

          name: python:2.7

          namespace: openshift

#构建应用的基础镜像

      type: Source

    triggers:

    - github:

        secret: kJZLvfQr3hZg

      type: GitHub

    - generic:

        secret: kJZLvfQr3hZg

      type: Generic

    - imageChange: {}

      type: ImageChange

    - type: ConfigChange

- apiVersion: v1

  kind: DeploymentConfig

  metadata:

    labels:

      application: ${APPLICATION_NAME}

    name: ${APPLICATION_NAME}

  spec:

    replicas: 1

    selector:

      deploymentConfig: ${APPLICATION_NAME}

    strategy:

      resources: {}

      rollingParams:

        intervalSeconds: 1

        maxSurge: 25%

        maxUnavailable: 25%

        timeoutSeconds: 600

        updatePeriodSeconds: 1

      type: Rolling

    template:

      metadata:

        labels:

          application: ${APPLICATION_NAME}

          deploymentConfig: ${APPLICATION_NAME}

        name: ${APPLICATION_NAME}

      spec:

        containers:

        - env:

          - name: MY_POD_IP

            valueFrom:

              fieldRef:

                apiVersion: v1

                fieldPath: status.podIP

          - name: OPENSHIFT_KUBE_PING_LABELS

            value: application=${APPLICATION_NAME}

          - name: OPENSHIFT_KUBE_PING_NAMESPACE

            valueFrom:

              fieldRef:

                fieldPath: metadata.namespace

          - name: HORNETQ_CLUSTER_PASSWORD

            value: kJZLvfQr3hZg

          - name: JGROUPS_CLUSTER_PASSWORD

            value: kJZLvfQr3hZg

          image: ${APPLICATION_NAME}
          
          readinessProbe:
            exec:
              command: ["python","hello.py"]

          imagePullPolicy: Always

          livenessProbe:

            failureThreshold: 3

            httpGet:

              path: /

              port: 8000

              scheme: HTTP

            initialDelaySeconds: 45

            periodSeconds: 45

            successThreshold: 1

            timeoutSeconds: 1

          name: ${APPLICATION_NAME}


    triggers:

    - type: ConfigChange

parameters:

- description: The name for the application.

  name: APPLICATION_NAME

  required: true

  value: tasks

#提示输入应用名称

- description: Git source URI for application

  name: SOURCE_URL

  required: true

  value: https://github.com/lbroudoux/openshift-tasks

#提示输入源码地

- description: Git branch/tag reference

  name: SOURCE_REF

  value: master

#提示输入源码 branch地址